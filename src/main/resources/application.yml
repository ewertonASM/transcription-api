server:
    port: ${SPRING_PORT:8081}
    error:
        include-stacktrace: never

spring:
    datasource:
        url: ${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/subtitledb?&createDatabaseIfNotExist=true}
        username: ${SPRING_DATASOURCE_USERNAME:root}
        password: ${SPRING_DATASOURCE_PASSWORD:root}
        tomcat:
            validation-query: SELECT 1
            test-on-borrow: true
            validation-interval: 3000 # 30s
    jpa:
        hibernate:
            ddl-auto: update   

        properties:
            hibernate:
                dialect: org.hibernate.dialect.MySQL5Dialect

    servlet:
        multipart:
            max-file-size:  ${MAX_FILE_SIZE:50MB}
            max-request-size:  ${MAX_REQUEST_SIZE:50MB}
    rabbitmq:
        host: ${RABBITMQ_HOST:localhost}
        port: ${RABBITMQ_PORT:5672}
        username: ${RABBITMQ_USERNAME:guest}
        password: ${RABBITMQ_PASSWORD:guest}
    cache:
        type: ${CACHE_TYPE:redis}
    redis:
        host: ${REDIS_HOST:localhost}
        port: ${REDIS_PORT:6379}
    
            

google_translate:
    base_url: ${TRANSLATOR_URL:https://translation.googleapis.com}
    api_key: ${TRANSLATOR_API_KEY:AIzaSyCYX9soUSBUk55LBfqXpIycVWPEczgjTNk}

queue:
    extract: ${RABBITMQ_QUEUE_EXTRACT:audio-extract}
    subtitle: ${RABBITMQ_QUEUE_SUBTITLE:subtitle-receive}
    exchange: ${RABBITMQ_EXCHANGE:amp.direct}

logging:
    level:
        root: ${LOGGING_NIVEL:INFO}
        org:
            springframework:
                web: ${LOGGING_NIVEL:INFO}

management:
    endpoints:
        web:
            exposure:
                include: ${HEALTHCHECK_EXPOSURE:info, health, metrics, prometheus}
version: '2.4'
x-database-variables: &database-variables
  SPRING_DATASOURCE_URL: jdbc:mysql://transcription_db:3306/bootdb?createDatabaseIfNotExist=true
  SPRING_DATASOURCE_USERNAME: root
  SPRING_DATASOURCE_PASSWORD: root
  MAX_FILE_SIZE: 50MB
  MAX_REQUEST_SIZE: 50MB
  RABBITMQ_HOST: rabbitmq
  RABBITMQ_PORT: 5672
  RABBITMQ_USERNAME: guest
  RABBITMQ_PASSWORD: guest
  RABBITMQ_QUEUE_EXTRACT: audio-extract
  RABBITMQ_QUEUE_SUBTITLE: subtitle-receive
  RABBITMQ_EXCHANGE: amp.direct
  TRANSLATOR_URL: https://translation.googleapis.com
  TRANSLATOR_API_KEY: AIzaSyCYX9soUSBUk55LBfqXpIycVWPEczgjTNk
  
services:

  redis:
    image: redis:alpine
    container_name: redis
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"

  transcription_db:
    image: mysql
    container_name: transcription_db
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=bootdb
    ports: 
      - "3306:3306"
    volumes:
      - transcription_data:/var/lib/mysql

  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672

    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
    - "./src/main/resources/prometheus.yml:/etc/prometheus/prometheus.yml"
    command:
    - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
    - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=transcription-admin
      - GF_SECURITY_ADMIN_PASSWORD=transcription123
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"

  transcription-api-inatel:
    image: emoura/transcription-api:0.0.1-SNAPSHOT
    container_name: transcription-api
    deploy:
      restart_policy:
        condition: on-failure
    ports:
    - "8081:8081"
    environment:
      <<: *database-variables
    depends_on:
      - rabbitmq
      - transcription_db

volumes:
  transcription_data:
  rabbitmq-data:
  redis-data: